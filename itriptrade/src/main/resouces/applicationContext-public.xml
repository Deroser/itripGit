<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd">
    <context:property-placeholder location="classpath*:db.properties,classpath:systemConfig.properties"/>

    <context:component-scan base-package="com.kgc"/>
    <!--配置源文件-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${mysql.driverClass}"></property>
        <property name="jdbcUrl" value="${mysql.jdbcUrl}"></property>
        <property name="user" value="${mysql.user}"></property>
        <property name="password" value="${mysql.password}"></property>
        <!--连接池中保留的最小连接数。 -->
        <property name="minPoolSize" value="${mysql.minPoolSize}"/>
        <!--连接池中保留的最大连接数。Default: 15 -->
        <property name="maxPoolSize" value="${mysql.maxPoolSize}"/>
        <!--初始化时获取的连接数，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
        <property name="initialPoolSize" value="${mysql.initialPoolSize}"/>
        <!--最大空闲时间,60秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->
        <property name="maxIdleTime" value="${mysql.maxIdleTime}"/>
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
        <property name="acquireIncrement" value="${mysql.acquireIncrement}"/>
        <!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。但由于预缓存的statements 属于单个connection而不是整个连接池。所以设置这个参数需要考虑到多方面的因素。
            如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->
        <property name="maxStatements" value="${mysql.maxStatements}"/>
        <!--每60秒检查所有连接池中的空闲连接。Default: 0 -->
        <property name="idleConnectionTestPeriod" value="${mysql.idleConnectionTestPeriod}"/>
        <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
        <property name="acquireRetryAttempts" value="${mysql.acquireRetryAttempts}"/>
        <!--获取连接失败将会引起所有等待连接池来获取连接的线程抛出异常。但是数据源仍有效 保留，并在下次调用getConnection()的时候继续尝试获取连接。如果设为true，那么在尝试
            获取连接失败后该数据源将申明已断开并永久关闭。Default: false -->
        <property name="breakAfterAcquireFailure" value="${mysql.breakAfterAcquireFailure}"/>
        <!--因性能消耗大请只在需要的时候使用它。如果设为true那么在每个connection提交的 时候都将校验其有效性。建议使用idleConnectionTestPeriod或automaticTestTable
            等方法来提升连接测试的性能。Default: false -->
        <property name="testConnectionOnCheckout" value="${mysql.testConnectionOnCheckout}"/>
    </bean>
    <!--SqlsessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!---->
        <property name="dataSource" ref="dataSource"/>

        <property name="typeAliasesPackage" value="com.kgc.beans"/>
        <!--加载配置文件-->
        <property name="mapperLocations" value="classpath*:mapper-xml/*Mapper.xml"/>
    </bean>
    <!--transactionMangager-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <tx:advice id="advice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*" propagation="REQUIRED"/>
            <tx:method name="modify*" propagation="REQUIRED"/>
            <tx:method name="remove*" propagation="REQUIRED"/>
            <!--SUPPORTS支持事务-->
            <tx:method name="*" propagation="SUPPORTS"/>
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="pointcut" expression="execution(* com.kgc.service.*.*(..))"/>
        <aop:advisor advice-ref="advice" pointcut-ref="pointcut"/>
    </aop:config>
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.kgc.dao"/>
        <property name="sqlSessionFactory" ref="sqlSessionFactory"/>
    </bean>

    <!--redis的配置文件-->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxActive" value="300"/>
        <property name="maxIdle" value="100"/>
        <property name="minIdle" value="1000"/>
        <property name="testOnReturn" value="true"/>
    </bean>
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg ref="jedisPoolConfig"/>
        <constructor-arg value="127.0.0.1"/>
        <constructor-arg value="6379"/>
        <constructor-arg value="3000"/>
    </bean>

    <!--支付宝手机网站支付bean-->
    <bean class="com.kgc.config.AlipayConfig">
        <property name="appId" value="2016102300742786"/>
        <property name="rsaPrivateKey" value="MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC6oCmiu5ABkc4IWBycCmYuj0JDBJ82CrAtOx2kdG+vPHaJsEwz6x7fX3n/SgqybnM1imaKWsLM1V+wKNyeqAeW4r/hPWX5gsURG8Ze3R0R28emHIGYKLpwrUW92X9mHuga+bZuk7QfKpgX/DqDgMbhxjuJg8ILo57eWILmhOsDB8xC6HqjFrghhdSsh4EF4HajKTm7B/4kTywks/ZgShk+zpQlQR38rTjO9nZ2Tf8LEo8To7y3euOsJasyYTko7rmeoVd9oN4yUyIkoongOOXqte/QbDi1hlJVwGj7S0EVTHhbid76kyPI3G8CHPoD1ilOEN6PLOfeg1U2bMw1FUNlAgMBAAECggEBAIbXYj3qN0prBuqQf1tfSCUr7TxvAnoRjumfZPOGDYwXq64ga2632z6ZxZPm84OouiVdMmmU2lsVcGXfoEgiMBmdC/a6XgvBqJGL9/Bi4rYcjkw/HIPMKalwCIv7skke26Vh96Y9ok9Cf1IVNFH/obNPf4UEZhfyyL7uROY583Pj2cblNqWDSbKAhZ7NTK7mRzkyTNkKHELsbn/ItaG8NR1DzG8j5s3CUDcTbDPTjC05qRkB5UDiA9h93X9ZDPCE1gtmXCUffNfPvzv7glYKfRXTKUoK6Xx+tiFGADVKFZZO43WR8FY8i+tKyyETLbvg4R8FPUvCOdsSrlCzDPJgQwECgYEA6x2joz6vQRI6aKCxccM+NslIAQRIWpNKe99u+AG4LnEQ/3AOOliKZ8ROWWmjWSRUhGM934eXGVEBCyBtGGmEQb333ogMRuaNOLQRVIbaBEboqRM0GPnPBVmCf2Bz5ZbbiPZQAiLxikW6MVBFZ3/PbY4U/SC4c+cpm8Q0L7ebsHkCgYEAyzPkn0gQiSaCFxAEBB9INkCXcllKL15IG8TGwl4gpnW4gup7TUABQ91EZzptUZoSIUBc4Ja+Wmj5V6P5rx67AjEKfGaH/pUDw+vcFY0zs1EbAJoTuy3PVXZm/hZ7bzbLRqaiilG+kNztyV+AjwR86P2U4LDY2bTDa9YfXZ4k500CgYA4paV9eWbkOK4V81GNZUsiDBDrHcsI95/khIrJ+jAUEG3V/XuQFzERmzx9UnRmz9gFJZwMtTB0iw3DToa6cQHKjSihVwoOMxInbUsXoH36tdLsmZHdyqJUWaKVafnCgTxXnXDdcunbNL2NkBeIvkSN0sO/0Rhf5Hwj6XvhW02JkQKBgQC1pown/6oYkP4WU9DjRnutVAyOwldZBPV9LWlo8/BIHlB1Z9wV8LOw0SqHBWoYWpz+cKUWeGtuMw1DVWitLdGLYf+3uYi1As085an28iVXlZeH8DTXTVpdUd08IyjxAJCzdd8zu2OZ6IYBUIiCUUbAmX/vZOhVpgxUaDPd4rOmuQKBgGwTOJRmiBRcvvsSmsqZhgOIJSmE71ZMbRucMtaxe7GzjlKzxIbuUbOpVR0bwa6PxKhXrButDRvU9X8utYDS8MgTyDjoeGHDutusQBFx+5tbYiXFAineHZppFPg9hyl4O3y9XdUSBNxehTyVYxw8GZCX1NnMqPdSx2a4h5/sA2Dy"/>
        <property name="notify_url" value="http://deroser.qicp.vip/trade/api/notify"/>
        <property name="return_url" value="http://deroser.qicp.vip/trade/api/return"/>
        <property name="url" value="https://openapi.alipaydev.com/gateway.do"/>
        <property name="charset" value="UTF-8"/>
        <property name="format" value="json"/>
        <property name="alipayPublicKey" value="MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApbWm1ct/OeGDk3eG1uQqQWV9FoJT6xwCHT4vyycYyYlLGacAzVghXAxfwxYT0ug0Neb3L4+74IQXQzfZFmquMuGbZ4K1DfmrwStyZb63paWlKQU+C6QoxGcBV8bRVYY488zv2qB1O0t8H5O7EvVH62beOj6yLc0jqVjlXRY8KWAL+rlmZ+M+V+VKeg2frhJW98nWjynSz1PEsqOS22/gRDoKAw4pATFz8GrN08gJgGW/M2yv7m5ZViAYPbQysAUgjOtEGIpphWxcbwxHBiPGdCCZYgYpTyHVX3tCGZhdM1nB5UEN9p5nnlMVqXdg4zyHM0p85h+If8zWRvsVuEr6SQIDAQAB"/>
        <property name="logPath" value="/logs"/>
        <property name="signType" value="RSA2"/>
        <property name="paymentSuccessUrl" value="http://localhost:8080/index.html#/orderpaystate?orderNo=%s&amp;id=%s"/>
        <property name="paymentFailUrl" value="http://localhost:8080/index.html#/orderpaystate?orderNo=%s&amp;id=%s&amp;state=0"/>
    </bean>

    <bean name="systemConfig" class="com.kgc.utils.SystemConfig">
        <property name="tradeEndUrl" value="${trade.ends.url}"/>
        <property name="tradeUseProxy" value="${trade.useProxy}"/>
        <property name="tradeProxyHost" value="${trade.proxy.host}"/>
        <property name="tradeProxyPort" value="${trade.proxy.port}"/>
    </bean>
</beans>